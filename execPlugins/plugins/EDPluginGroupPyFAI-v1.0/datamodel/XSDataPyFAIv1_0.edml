targetNamespace "http://www.edna-site.org"

import XSDataCommon.XSData
import XSDataCommon.XSDataInput
import XSDataCommon.XSDataResult
import XSDataCommon.XSDataImage
import XSDataCommon.XSDataImageExt
import XSDataCommon.XSDataWavelength
import XSDataCommon.XSDataBoolean
import XSDataCommon.XSDataFile
import XSDataCommon.XSDataDouble
import XSDataCommon.XSDataInteger
import XSDataCommon.XSDataString
import XSDataCommon.XSDataStatus
import XSDataCommon.XSDataImage
import XSDataCommon.XSDataLength
import XSDataCommon.XSDataAngle


complex type XSDataDetector extends XSData {
	"Number 1 and 2 refer to Y and X axis" 
	spatialDistortionFile : XSDataFile optional
	pixelSizeX: XSDataLength optional
	pixelSizeY: XSDataLength optional
	distortionFileX : XSDataImageExt optional
	distortionFileY : XSDataImageExt optional
}

complex type XSDataGeometrySPD extends XSData {
	sampleDetectorDistance : XSDataLength optional
	pointOfNormalIncidence1 : XSDataLength optional
	pointOfNormalIncidence2 : XSDataLength optional
	rotation1: XSDataAngle optional
	rotation2: XSDataAngle optional
	rotation3: XSDataAngle optional
}

complex type XSDataGeometryFit2D extends XSData {
	angleOfTilt : XSDataAngle optional
	tiltRotation : XSDataAngle optional
	beamCentreInPixelsX : XSDataDouble optional
	beamCentreInPixelsY : XSDataDouble 	optional
	distance : XSDataLength	optional
}


complex type XSDataInputPyFAI extends XSDataInput {
	darkCurrentImageFile : XSDataFile optional
	flatFieldImageFile : XSDataFile optional
	input : XSDataImageExt
	output : XSDataImageExt optional
	wavelength : XSDataWavelength 	optional
	maskFile : XSDataFile optional
}


complex type XSDataResultPyFAI extends XSDataResult {
	output : XSDataImageExt
}

complex type XSDataPeakPosition extends XSData {
	"Set of pixel coordinates and the associated 2Theta diffraction angle"
	positionX : XSDataDouble
	positionY : XSDataDouble
	twoTheta  : XSDataDouble
}

complex type XSDataInputRefineDiffractionGeometry extends XSDataInput {
	points : XSDataPeakPosition []
	geometryFit2D: XSDataGeometryFit2D optional
	geometrySPD: XSDataGeometrySPD optional
	detector: XSDataDetector 
}

complex type XSDataResultRefineDiffractionGeometry extends XSDataResult {
	geometryFit2D: XSDataGeometryFit2D optional
	geometrySPD: XSDataGeometrySPD optional
 
}