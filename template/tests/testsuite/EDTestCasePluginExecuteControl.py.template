# coding: utf8
#
#    Project: <projectName>
#             http://www.edna-site.org
#
#    File: "$Id$"
#
#    Copyright (C) <copyright>
#
#    Principal author:       <author>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

__author__="<author>"
__license__ = "GPLv3+"
__copyright__ = "<copyright>"

import os

from EDVerbose                           import EDVerbose
from EDAssert                            import EDAssert
from EDTestCasePluginExecute             import EDTestCasePluginExecute
from <xsDataBaseName> 					 import <xsDataInputName> as XSDataInput
from <xsDataBaseName>                    import <xsDataResultName> as XSDataResult

class EDTestCasePluginExecuteControl<pluginName>(EDTestCasePluginExecute):
    

    def __init__(self, _strTestName = None):
        EDTestCasePluginExecute.__init__(self, "EDPluginControl<pluginName>")
#        self.setConfigurationFile(os.path.join(self.getPluginTestsDataHome(),
#                                               "XSConfiguration_<basePluginName>.xml"))
        self.setDataInputFile(os.path.join(self.getPluginTestsDataHome(), \
                                           "XSDataInput<basePluginName>_reference.xml"))
        self.setReferenceDataOutputFile(os.path.join(self.getPluginTestsDataHome(), \
                                                     "XSDataResult<basePluginName>_reference.xml"))
                 
    def preProcess(self):
        """
        Download reference files
        """
        EDTestCasePluginExecute.preProcess(self)
        #self.loadTestImage(["inputfile.ext"])
                
    def testExecute(self):
        """
        """ 
        self.run()
        plugin = self.getPlugin()

################################################################################
# Compare XSDataResults
################################################################################

        strExpectedOutput = self.readAndParseFile (self.getReferenceDataOutputFile())
        EDVerbose.DEBUG("Checking obtained result...")
        xsDataResultReference = XSDataResult.parseString(strExpectedOutput)
        xsDataResultObtained = plugin.getDataOutput()
        EDAssert.strAlmostEqual(xsDataResultReference.marshal(), xsDataResultObtained.marshal(), "XSDataResult output are the same", _strExcluded="bioSaxs")
        


    def process(self):
        """
        """
        self.addTestMethod(self.testExecute)

        
        

if __name__ == '__main__':

    edTestCasePluginExecuteControl<pluginName> = EDTestCasePluginExecuteControl<pluginName>("EDTestCasePluginExecuteControl<pluginName>")
    edTestCasePluginExecuteControl<pluginName>.execute()
